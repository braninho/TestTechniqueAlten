import io.jsonwebtoken.Claims;
import io.jsonwebtoken.Jwts;
import io.jsonwebtoken.SignatureAlgorithm;
import org.springframework.stereotype.Component;
import java.util.Date;

@Component
public class JwtUtil

  private String secretKey = "secret";

  public String generateToken(String email) {
    return Jwts.builder()
              .setSubject(email)
              .setIssuedAt(new Date())
              .setExpiration(new Date(System.currentTimeMillis() + 1000 * 60 * 60 * 24))
              .signWith(SignatureAlgorithm.HS256, secretKey)
              .compact();
  }

  public Claims extractClaims(String token) {
    return Jwts.parser()
            .setSigningKey(secretKey)
            .parseClaimsJws(token)
            .getBody();
  }
  
  public String extractUsername(String token) {
    return extractClaims(token).getSubject();
  }
  
  public boolean isTokenExpired(String token) {
    return extractClaims(token).getExpiration().before(new Date());
  }
  
  public boolean validateToken(String token, String email) {
    return (email.equals(extractUsername(token)) && !isTokenExpired(token));
  }
}
